# gpg2(1) completion                                       -*- shell-script -*-

_gpg2()
{
    local cur prev words cword
    _init_completion || return

    case $prev in
        --homedir)
            _filedir -d
            return 0
            ;;
        -s|--sign|--clearsign|--options|--decrypt)
            _filedir
            return 0
            ;;
        --export|--sign-key|--lsign-key|--nrsign-key|--nrlsign-key|--edit-key)
            # return list of public keys
            COMPREPLY=( $( compgen -W "$( $1 --list-keys 2>/dev/null | \
                sed -ne 's@^pub.*/\([^ ]*\).*$@\1@p' \
                    -ne 's@^.*\(<\([^>]*\)>\).*$@\2@p' )" -- "$cur" ) )
            return 0
            ;;
        -r|--recipient)
            COMPREPLY=( $( compgen -W "$( $1 --list-keys 2>/dev/null | \
                sed -ne 's@^.*<\([^>]*\)>.*$@\1@p')" -- "$cur" ) )
            if [[ -e ~/.gnupg/gpg.conf ]]; then
                COMPREPLY+=( $( compgen -W "$( sed -ne \
                    's@^[ \t]*group[ \t][ \t]*\([^=]*\).*$@\1@p' \
                    ~/.gnupg/gpg.conf)" -- "$cur" ) )
            fi
        return 0
        ;;
    esac

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '$($1 --dump-options)' -- "$cur" ) )
    fi
} &&
complete -F _gpg2 -o default gpg2

# ex: ts=4 sw=4 et filetype=sh
