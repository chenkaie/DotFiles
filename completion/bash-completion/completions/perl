# bash completion for perl                                 -*- shell-script -*-

_perlmodules()
{
    COMPREPLY=( $( compgen -P "$prefix" -W \
        "$( ${1:-perl} ${BASH_SOURCE[0]%/*}/../helpers/perl modules $cur )" \
        -- "$cur" ) )
    __ltrim_colon_completions "$prefix$cur"
}

_perlfunctions()
{
    COMPREPLY=( $( compgen -P "$prefix" -W \
        "$( ${1:-perl} ${BASH_SOURCE[0]%/*}/../helpers/perl functions $cur )" \
        -- "$cur" ) )
}

_perl()
{
    local cur prev words cword
    _init_completion -n : || return

    local prefix="" temp optPrefix optSuffix

    # If option not followed by whitespace, reassign prev and cur
    if [[ "$cur" == -?* ]]; then
        temp=$cur
        prev=${temp:0:2}
        cur=${temp:2}
        if [[ $prev == -d && $cur == t* ]]; then
            prev=-dt
            cur=${cur:1}
        fi
        optPrefix=-P$prev
        optSuffix=-S/
        prefix=$prev
    fi

    case $prev in
        -D|-e|-E|-i|-F|-l)
            return 0
            ;;
        -I|-x)
            local IFS=$'\n'
            compopt -o filenames
            COMPREPLY=( $( compgen -d $optPrefix $optSuffix -- "$cur" ) )
            return 0
            ;;
        -m|-M)
            temp="${cur#-}"
            prefix+="${cur%$temp}"
            cur="$temp"
            _perlmodules $1
            return 0
            ;;
        -V)
            if [[ $cur == :* ]]; then
                temp="${cur##+(:)}"
                prefix+="${cur%$temp}"
                local IFS=$'\n'
                COMPREPLY=( $( compgen -P "$prefix" -W \
                    '$( $1 -MConfig -e "print join \"\\n\",
                        keys %Config::Config" 2>/dev/null )' -- "$temp" ) )
                __ltrim_colon_completions "$prefix$temp"
            fi
            return 0
            ;;
        -d|-dt)
            if [[ $cur == :* ]]; then
                temp="${cur#:}"
                prefix="$prefix${cur%$temp}"
                cur="Devel::$temp"
                _perlmodules $1
            fi
            ;;
    esac

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '-C -s -T -u -U -W -X -h -v -V -c -w -d -D -p
            -n -a -F -l -0 -I -m -M -P -S -x -i -e' -- "$cur" ) )
    else
        _filedir
    fi
} &&
complete -F _perl perl

_perldoc()
{
    local cur prev words cword
    _init_completion -n : || return

    local prefix="" temp

    # completing an option (may or may not be separated by a space)
    if [[ "$cur" == -?* ]]; then
        temp=$cur
        prev=${temp:0:2}
        cur=${temp:2}
        prefix=$prev
    fi

    local perl="${1%doc}"
    [[ $perl == $1 ]] || ! type $perl &>/dev/null && perl=

    case $prev in
        -h|-V|-n|-o|-M|-w|-L)
            return 0
            ;;
        -d)
            _filedir
            return 0
            ;;
        -f)
            _perlfunctions $perl
            return 0
            ;;
    esac

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '$( _parse_help "$1" -h )' -- "$cur" ) )
    else
        # return available modules (unless it is clearly a file)
        if [[ "$cur" != @(*/|[.~])* ]]; then
            _perlmodules $perl
            if [[ $cur == p* ]]; then
                COMPREPLY+=( $( compgen -W \
                    '$( PERLDOC_PAGER=/bin/cat "$1" -u perl |  \
                     sed -ne "/perl.*Perl overview/,/perlwin32/p" | \
                     awk "\$NF=2 && \$1 ~ /^perl/ { print \$1 }" )' \
                    -- "$cur" ) )
            fi
        fi
        _filedir 'p@([lm]|od)'
    fi
} &&
complete -F _perldoc -o bashdefault perldoc

# ex: ts=4 sw=4 et filetype=sh
