# bash completion for strace                               -*- shell-script -*-

_strace()
{
    local cur prev words cword
    _init_completion -n = || return

    # check if we're still completing strace
    local offset=0 i
    for (( i=1; i <= cword; i++ )); do
        case ${words[$i]} in
            -o|-e|-p)
                i=$((i+1))
                continue
                ;;
            -*)
                continue
                ;;
        esac
        offset=$i
        break
    done

    if [[ $offset -gt 0 ]]; then
        _command_offset $offset
    else

        case $prev in
            -e)
                if [[ "$cur" == *=* ]]; then
                    prev=${cur/=*/}
                    cur=${cur/*=/}

                    case $prev in
                        trace)
                            # Import arch-specific syscalls
                            #+ -- not foolproof IMHO --David Paleino
                            local define syscall rest
                            local -A syscalls
                            while read -r define syscall rest; do
                                [[ $define == "#define" && \
                                    $syscall =~ ^__NR_(.+) ]] && \
                                    syscalls[${BASH_REMATCH[1]}]=1
                            done 2>/dev/null < /usr/include/asm/unistd.h
                            if [[ ! $syscalls ]]; then
                                local unistd arch=$( command uname -m )
                                if [[ "$arch" == *86 ]]; then
                                    unistd=/usr/include/asm/unistd_32.h
                                else
                                    unistd=/usr/include/asm/unistd_64.h
                                fi
                                while read -r define syscall rest; do
                                    [[ $define == "#define" && \
                                        $syscall =~ ^__NR_(.+) ]] && \
                                        syscalls[${BASH_REMATCH[1]}]=1
                                done 2>/dev/null < $unistd
                            fi

                            COMPREPLY=( $( compgen -W '${!syscalls[@]} file
                                process network signal ipc desc all none' \
                                    -- "$cur" ) )
                            return 0
                            ;;
                    esac
                else
                    compopt -o nospace
                    COMPREPLY=( $( compgen -S"=" -W 'trace abbrev verbose raw
                        signal read write' -- "$cur" ) )
                fi
                return 0
                ;;
            -o)
                _filedir
                return 0
                ;;
            -p)
                _pids
                return 0
                ;;
            -S)
                COMPREPLY=( $( compgen -W 'time calls name nothing' \
                    -- "$cur" ) )
                return 0
                ;;
            -u)
                _allowed_users
                return 0
                ;;
        esac

        if [[ "$cur" == -* ]]; then
            COMPREPLY=( $( compgen -W '-c -d -f -ff -F --help -i -q -r -t -tt
                -ttt -T -v -V -x -xx -a -e -o -O -p -s -S -u -E' -- "$cur" ) )
        else
            COMPREPLY=( $( compgen -c -- "$cur" ) )
        fi
    fi
} &&
complete -F _strace -o default strace

# ex: ts=4 sw=4 et filetype=sh
